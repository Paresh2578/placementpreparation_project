@model List<QuestionModel>

@{
    ViewData["Title"] = "List Questions";
}


<div class="bg-white p-4 rounded-md shadow-lg ">
     <!-- Loading -->
    <div id="model-loading" style="display: none;" >
         <partial name="_Loading_Dialong"/>
    </div>
</div>
    <!-- Header Section -->
    <div class="table-hader">
        <h1 class="table-responsive-title">List of Question</h1>
        <div class="flex gap-4" style="gap:0.5rem">
            <a asp-action="ExportToExcelQuestion" asp-asp-controller="Mcq" class="export-excel-btn"><i class="fa-solid fa-file-export fa-bounce"></i> Export in Excel</a>
             <a asp-action="AddOrEditQuestion" asp-asp-controller="Question" class="primary-button"><i class="fa-solid fa-plus fa-bounce"></i> Add Question</a>
           
        </div>
    </div>



    <div>
        <!-- Search course name, topic  ,subTopic  dropdown-->
        <div class="responsive-div mb-4">
            <!-- Select Course Dropdown -->
            <div class="dropdown-container">
                <label class="text-gray-700 mb-1">Course</label>
                <select style="" asp-items="@(ViewBag.courseList as List<SelectListItem>)" id="courses"      class="input-field bg-red" style="color:red">
                    <option value="">Select Course</option>
                </select>
            </div>

            <!-- Select Course Dropdown -->
            <div class="dropdown-container">
                <label class="text-gray-700 mb-1">Topic</label>
                <select style="" asp-items="@(ViewBag.TopicList as List<SelectListItem>)" id="topics"        class="input-field  bg-red" style="color:red">
                    <option value="">Select Topic</option>
                </select>
            </div>

            <!-- Select Sub Topic Dropdown -->
            <div class="dropdown-container">
                <label class="text-gray-700 mb-1">Sub Topic</label>
                <select style="" asp-items="@(ViewBag.SubTopicList as List<SelectListItem>)" id="subTopics"        class="input-field  bg-red" style="color:red">
                    <option value="">Select Sub Topic</option>
                </select>
            </div>

            <!-- search and clear btn -->
            <div class="button-container">
                <!-- Search Button -->
                <button id="handlerSearch" class="primary-button"><i class="fa-solid fa-magnifying-glass fa-bounce"></i> Search</button>
                <!-- Clear Button -->
                <a asp-action="ClearSearch" asp-controller="Question" class="clear-button"> <i class="fa-solid fa-xmark fa-bounce"></i> Clear</a>
            </div>



        </div>

         @if(TempData["ErrorMessage"] != null){
            <p class="validation-error-lable" style="text-align: start;">@TempData["ErrorMessage"]</p>
        }


        <!-- Search Bar Section -->
        <div class="relative">
            <input id="questionSearch"
                class="bg-gray-100 w-full pr-11 h-10 pl-3 py-2 bg-transparent placeholder:text-slate-400 text-slate-700 text-sm border border-slate-200 rounded transition duration-300 ease focus:outline-none focus:border-blue-500 hover:border-blue-500 shadow-sm focus:shadow-md"
                placeholder="Search for Question..." />
            <button class="absolute h-8 w-8 right-1 top-1 my-auto px-2 flex items-center bg-white rounded "
                type="button">
                <svg xmlns="http://www.w3.org/2000/svg" fill="transparent" viewBox="0 0 24 24" stroke-width="3"
                    stroke="currentColor" class="w-8 h-8 text-slate-600">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z" />
                </svg>
            </button>
        </div>

        <!-- Table Section -->
        <div class="mt-6 overflow-x-auto w-full">
            <table class="min-w-full  bg-white border border-gray-200">
                <thead>
                    <tr class="bg-gray-100 text-nowrap text-gray-600  uppercase text-sm leading-normal">
                        <th><input type="checkbox" id="selectAll" /></th>
                        <th class="py-3 px-6 text-left">#</th>
                        <th class="py-3 px-6 text-left">Question</th>
                        <th class="py-3 px-6 text-left">Active</th>
                        <th class="py-3 px-6 text-left">Action</th>
                    </tr>
                </thead>
                <tbody id="question" class="text-gray-700 text-sm font-light">
                    @if(ViewData["InternalServerError"] != null){
                        <partial name="_Errors" />
                    }
                    @{
                        int index = 1;
                        foreach (var question in Model)
                        {
                            <tr data-id="@question.QuestionId" class="question-row border-b text-nowrap hover:cursor-pointer border-gray-200 ">
                                <th><input type="checkbox"  class="select-question" value="@question.QuestionId" onclick="toggleCheckbox(this)" /></th>
                                <td class="py-3 px-6 text-left">@index</td>
                                <td class="py-3 px-6 text-left" style="max-width: 500px; overflow-x: hidden; white-space: normal; ">@question.Question</td>
                                <td class="py-3 px-6 text-left"><span
                                        class="@(question.IsActive ? "yes-btn" : "no-btn")">@(question.IsActive ? "Yes" :
                                "No")</span></td>

                                <td class="py-3 px-6 text-left flex gap-x-4">
                                    <a class="cursor-pointer" asp-action="AddOrEditQuestion" asp-controller="Question"
                                        asp-route-questionId="@question.QuestionId"><img src="~/assets/icons/edit.svg"
                                            height="20" width="20" /></a>
                                    <a class="cursor-pointer"
                                        onclick="confirmDelete('/DeleteQuestion/@question.QuestionId')"><img
                                            src="~/assets/icons/delete.svg" height="20" width="20" /></a>
                                </td>
                            </tr>
                            index++;
                        }

                        // If no questions are found
                        if (Model.Count == 0)
                        {
                            <tr class="border-b text-nowrap border-gray-200  no-question-found">
                                <td class="py-3 px-6 text-center" colspan="5">No Question Found</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <button id="handleDelete" class="clear-button m-4" style="margin-top: 20px; display: block;width: fit-content;"><i class="fa-regular fa-trash-can fa-bounce"></i> Delete </button>
    </div>

</div>


@section Scripts {
 <!--  Input search  bar  -->
    <script>
        $(document).ready(function () {
            $('#questionSearch').on("keyup", function () {
                var value = $(this).val().toLowerCase().toString().trim();

                // Filter table rows based on search input
                $("#question tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });

                // Check the number of visible rows
                var visibleRows = $("#question tr:visible").length;

                // Remove existing "No question   Found" row if it exists
                $("#question .no-question-found").remove();

                // If no rows are visible, add the "No Question Found" row
                if (visibleRows === 0) {
                    $("#question").append('<tr class="border-b text-nowrap border-gray-200  no-question-found"><td class="py-3 px-6 text-center" colspan="4">No Question  Found</td></tr>');
                }
            });
        });
    </script>


     <!-- Search using Dropdown -->
   <script src="~/lib/jquery/dist/jquery.min.js"></script> <!-- Local version of jQuery -->
<script  type="text/javascript">
 function handleRedirect(url) {
        window.location = url;
    }

    // Loading
   const loading = document.getElementById("model-loading");

   //show loading dialong
   function showLoadingDialong(){
     loading.style.display = "block";
   }

   //hide loading dialong
   function hideLoadingDialong(){
     loading.style.display = "none";
   }

    $(document).ready(function () {
       @* course dropdown change *@
        $('#courses').change(function () {
            // show loading 
            showLoadingDialong();

            var courseId = $(this).val();

            //set topic dropdown-- data
            $.ajax({
                url: '/GetTopicsByCourseId/'+courseId,
                type: 'GET',
                success: function (data) {
                    $('#topics').empty();
                    $('#topics').append('<option value="">Select Topic</option>');
                    $.each(data.value, function (index, item) {
                        $('#topics').append('<option value="' + item.topicId + '">' + item.topicName + '</option>');
                    });
                    //Hide loading dialong
                    hideLoadingDialong();
                },
            });

            //Hide loading dialong
            @* hideLoadingDialong(); *@


        // set subTopic dropdown data
         $.ajax({
                url: '/GetSubTopicsByCourseId/'+courseId,
                type: 'GET',
                success: function (data) {
                    $('#subTopics').empty();
                    $('#subTopics').append('<option value="">Select Sub Topic</option>');
                    $.each(data.value, function (index, item) {
                        $('#subTopics').append('<option value="' + item.subTopicId + '">' + item.subTopicName + '</option>');
                    });
                    //Hide loading dialong
                    hideLoadingDialong();
                },
            });
        });

        //Hide loading dialong
         hideLoadingDialong();

        @* topic dropdown change *@
        $('#topics').change(function () {
            // show loading 
            showLoadingDialong();
            var topicId = $(this).val();
            $.ajax({
                url: '/GetSubTopicsByTopicId/' + topicId,
                type: 'GET',
                success: function (data) {
                    $('#subTopics').empty();
                    $('#subTopics').append('<option value="">Select Sub Topic</option>');
                    $.each(data.value, function (index, item) {
                            $('#subTopics').append('<option value="' + item.subTopicId + '">' + item.subTopicName + '</option>');
                    });
                    //Hide loading dialong
                    hideLoadingDialong();
                },
            });

            //Hide loading dialong
            @* hideLoadingDialong(); *@
        });

        
        //Seach button click
        $('#handlerSearch').click(function () {
             let courseId = $('#courses').val();
            let topicId = $('#topics').val();
            let subTopicId = $('#subTopics').val();

            // if All  select field are empty then return
            if (!courseId && !topicId && !subTopicId) {
                alert('Please select any one field');
                return;
            }

            $.ajax({
                url: '/Question/GetQuestions',
                type: 'GET',
                data: { courseId: courseId, topicId: topicId, subTopicId: subTopicId },
                success: function (data) {
                    $('#question').empty();
                    if (data && data.length) {
                        let html = '';
                        $.each(data, function (index, question) {
                            html += '<tr data-id="'+(question.questionId)+'" class="border-b text-nowrap border-gray-200 "  onclick="toggleCheckbox(this)">';
                    html += '<th><input type="checkbox" class="select-question" value="' + question.questionId + '" onclick="toggleCheckbox(this)"  /></th>';
                            html += '<td class="py-3 px-6 text-left">' + (index+1) + '</td>';
                            html += '<td class="py-3 px-6 text-left">' + question.question + '</td>';
                            html += '<td class="py-3 px-6 text-left"><span class="' + (question.isActive ? "yes-btn" : "no-btn") + '">' + (question.isActive ? "Yes" : "No") + '</span></td>';
                          html += '<td class="py-3 px-6 text-left flex gap-x-4">' +
                                '<a class="cursor-pointer" onclick="handleRedirect(\'/Admin/Question/AddOrEditQuestion?questionId=' + question.questionId + '\')">' +
                                '<img src="../../../../../assets/icons/edit.svg" height="20" width="20" />' +
                                '</a>' +
                                '<a class="cursor-pointer" onclick="confirmDelete(\'/DeleteQuestion/' + question.questionId + '\')">' +
                                '<img src="../../../../../assets/icons/delete.svg" height="20" width="20" />' +
                                '</a>' +
                                '</td>';
                            html += '</tr>';
                        });
                        $('#question').append(html);
                    } else {
                        $('#question').append('<tr><td colspan="5" class="text-center py-4">No Questions found</td></tr>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching Questions :', error);
                    $('#question').empty().append('<tr><td colspan="5" class="text-center text-red-500 py-4">Failed to load Questions</td></tr>');
                }
            });
        });
    });
</script>

<!-- Delete All checkbox Box -->
<script>
      function toggleCheckbox(checkbox) {
             highlightRow(checkbox); // Call highlightRow explicitly
             updateSelectAllState(); // Update the select all checkbox state
        }
        

    // Highlight the row if the checkbox is checked
    function highlightRow(checkbox) {
        const row = checkbox.closest('tr');
        @* console.log(checkbox.checked); *@
        if (checkbox.checked) {
            row.classList.add('row-highlight');
        } else {
            row.classList.remove('row-highlight');
        }
    }

   // select All checkbox
    document.getElementById('selectAll').addEventListener('change', function () {
        const checkboxes = document.querySelectorAll('.select-question');
        checkboxes.forEach(checkbox => {
            checkbox.checked = this.checked;
            highlightRow(checkbox);
        });
    });
    function updateSelectAllState() {
    const checkboxes = document.querySelectorAll('.select-question');
    const selectAllCheckbox = document.getElementById('selectAll');
    const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);
    const noneChecked = Array.from(checkboxes).every(checkbox => !checkbox.checked);

    if (allChecked) {
        selectAllCheckbox.checked = true;             
        selectAllCheckbox.indeterminate = false; // Not in an indeterminate state
    } else if (noneChecked) {
        selectAllCheckbox.checked = false;
        selectAllCheckbox.indeterminate = false; // Not in an indeterminate state
    } else {
        selectAllCheckbox.checked = false;
        selectAllCheckbox.indeterminate = true; // Set indeterminate state
    }
}

    // Prevent the row click from triggering when clicking on specific elements like the edit/delete buttons
    document.querySelectorAll('.mcq-question').forEach(row => {
        row.addEventListener('click', function (e) {
            if (e.target.tagName === 'A' || e.target.tagName === 'IMG') {
                e.stopPropagation();
            }
        });
    });

    // Delete button click
    document.getElementById('handleDelete').addEventListener('click', function () {
        const selectedQuestionIds = Array.from(document.querySelectorAll('.select-question:checked')).map(checkbox => checkbox.value);
        if (selectedQuestionIds.length === 0) {
            alert('Please select at least one Question to delete');
            return;
        }

         Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, delete it!"
    }).then((result) => {
        // If the user confirms, redirect to the delete URL
        if (result.isConfirmed) {
            window.location.href = '/Admin/Question/DeleteMultipleQuestion?questionIds=' + selectedQuestionIds.join(',');
        }
    });
    });
</script>
}

@using Newtonsoft.Json
@using Placement_Preparation.BAL
@model DashboardModel;

@{
    ViewData["Title"] = "Dashboard";
    bool isAdmin = CV.GetIsAdmin()?? false;
}

<div class="dashboard">
    <partial name="_Errors"/>
          <!-- Detalis Dailogs-->
        <partial name="_QuestionDetailsModal"/>
        <partial name="_McqDetailsModal" />
        <partial name="_StudentDetailsModal" />

    @if(ViewData["InternalServerError"] == null){
             
    <!-- Widgets count -->
    <div class="widgets">
        @if(isAdmin){
            <!--Total Course -->
            <div class="widget">
                <div class="icon-container" style="background-color: #6C63FF;">
                    <i class="fa-solid fa-graduation-cap"></i>
                </div>
                <div>
                    <p class="widget-value" style="color: #6C63FF;">@Model.TotalCourses</p>
                    <p class="widget-title">Total Courses</p>
                </div>    
            </div>

            <!--Total  Courses Question -->
            <div class="widget">
                <div class="icon-container" style="background-color: #4CAF50;">
                    <i class="fa-solid fa-circle-question"></i>
                </div>
                <div>
                    <p class="widget-value" style="color: #4CAF50;">@Model.TotalCoursesQuestions</p>
                    <p class="widget-title">Total Courses Questions</p>
                </div>
            </div>

            <!--Total Courses Mcq -->
            <div class="widget">
                <div class="icon-container" style="background-color: #FFC107;">
                    <i class="fa-solid fa-check-double"></i>
                </div>
                <div>
                    <p class="widget-value" style="color: #FFC107;">@Model.TotalCoursesMcqs</p>
                    <p class="widget-title">Total Courses MCQs</p>
                </div>
            </div>
        }

         <!--Total  Interview Question -->
        <div class="widget">
            <div class="icon-container" style="background-color: #4CAF50;">
                <i class="fa-solid fa-circle-question"></i>
            </div>
            <div>
                <p class="widget-value" style="color: #4CAF50;">@Model.TotalInterviewQuestions</p>
                <p class="widget-title">Total Interview Questions</p>
            </div>
        </div>

        <!--Total Interview Mcq -->
        <div class="widget">
            <div class="icon-container" style="background-color: #FFC107;">
                <i class="fa-solid fa-check-double"></i>
            </div>
            <div>
                <p class="widget-value" style="color: #FFC107;">@Model.TotalInterviewMcqs</p>
                <p class="widget-title">Total Interview MCQs</p>
            </div>
        </div>
    </div>

       @if(TempData["LableErrorMesssage"] != null)
            {
            <p class="validation-error-lable" style="text-align: start;">@TempData["LableErrorMesssage"]</p>
            }

    <!-- New Student Padding Request-->
    @if(isAdmin){
        <div class="bg-white p-4 rounded-md shadow-lg mt-5  ">
        <!-- Header Section -->
            <div class="table-hader">
                <h1 class="table-responsive-title">List of New Student Padding Request</h1>
            </div>

        <!-- Table Section -->
            <div class="mt-6 overflow-x-auto w-full">
                <table class="min-w-full  bg-white border border-gray-200">
                    <thead>
                        <tr class="bg-gray-100 text-nowrap text-gray-600  uppercase text-sm leading-normal">
                            <th class="py-3 px-6 text-left">#</th>
                            <th class="py-3 px-6 text-left">Name</th>
                            <th class="py-3 px-6 text-left">Email </th>
                            <th class="py-3 px-6 text-left">Details</th>
                            <th class="py-3 px-6 text-left">Action</th>
                        </tr>
                    </thead>
                    <tbody id="courses" class="text-gray-700 text-sm font-light">
                        @{
                            int idx = 1;
                            @if(Model != null && Model.PaddingStudentRequest != null){
                                foreach(Dictionary<string,dynamic> student in Model.PaddingStudentRequest){
                                <tr class="border-b text-nowrap  border-gray-200 ">
                                    <td class="py-3 px-6 text-left">@idx</td>
                                    <td class="py-3 px-6 text-left">@student["userName"]</td>
                                    <td class="py-3 px-6 text-left">@student["email"]</td>
                                    <td class="py-3 px-6 text-left">
                                        <a href="javascript:void(0);" class="text-blue-500 student-view-details" data-question='@Html.Raw(JsonConvert.SerializeObject(student))'>View Details</a>
                                    </td>
                                    <td class="action-button">
                                        <a asp-action="UpdateStudentApprovelStatus" asp-route-id='@student["adminUserId"]' asp-route-status="Reject" class="reject button"><i class="fa-solid fa-times-circle"></i> Reject</a>
                                        <a asp-action="UpdateStudentApprovelStatus" asp-route-id='@student["adminUserId"]' asp-route-status="Accept" class="accept button" style="background:#22c55e"><i class="fa-solid fa-check-circle"></i> Accept</a>
                                    </td>
                                </tr> 
                                idx++;
                           }
                           // not found
                            if(Model.PaddingStudentRequest.Count == 0){
                                 <tr class="border-b text-nowrap  border-gray-200 ">
                                        <td class="py-3 px-6  text-center" colspan="5">No Record Found</td>
                                  </tr>
                                  }
                            }
                        }
                    </tbody>
                </table>
            </div>
      </div>
    }

  

     <!-- New Mcq Padding Request-->
    <div class="bg-white p-4 rounded-md shadow-lg mt-5  ">
       <!-- Header Section -->
        <div class="table-hader">
            <h1 class="table-responsive-title">List of New Mcq Padding Request</h1>
        </div>

       <!-- Table Section -->
        <div class="mt-6 overflow-x-auto w-full">
            <table class="min-w-full  bg-white border border-gray-200">
                <thead>
                    <tr class="bg-gray-100 text-nowrap text-gray-600  uppercase text-sm leading-normal">
                        <th class="py-3 px-6 text-left">#</th>
                        <th class="py-3 px-6 text-left">Mcq</th>
                        <th class="py-3 px-6 text-left">Details</th>
                        @if(isAdmin){
                            <th class="py-3 px-6 text-left">Action</th>
                        }else{
                            <th class="py-3 px-6 text-left">Status</th>
                        }
                    </tr>
                </thead>
                <tbody id="courses" class="text-gray-700 text-sm font-light">
                    @* Start of Razor code block *@
                    @{
                        int mcqIdx = 1;
                         if(Model != null && Model.PaddingMcqRequest != null){
                             foreach(McqModel mcq in Model.PaddingMcqRequest){
                            <tr class="border-b text-nowrap  border-gray-200 ">
                                <td class="py-3 px-6 text-left">@mcqIdx</td>
                                <td class="py-3 px-6 text-left">@mcq.QuestionText</td>
                                <td class="py-3 px-6 text-left">
                                    <a href="javascript:void(0);" class="text-blue-500 mcq-view-details" data-mcq='@Html.Raw(JsonConvert.SerializeObject(mcq))'>View Details</a>
                                </td>
                                @if(isAdmin){
                                    <td class="action-button">
                                        <a asp-action="UpdateNewInterviewMcqRequestStatus" asp-route-id='@mcq.McqId' asp-route-status="Reject" class="reject button"><i class="fa-solid fa-times-circle"></i> Reject</a>
                                        <a asp-action="UpdateNewInterviewMcqRequestStatus" asp-route-id='@mcq.McqId' asp-route-status="Accept" class="accept button" style="background:#22c55e"><i class="fa-solid fa-check-circle"></i> Accept</a>
                                    </td>
                                }else{
                                    <td class="py-3 px-6 text-left">
                                     <span class="status @mcq.ApproveStatus.ToLower()">@mcq.ApproveStatus</span>
                                    </td>
                                }
                          </tr>  
                          mcqIdx++; 
                        }
                        // not found
                        if(Model.PaddingMcqRequest.Count == 0){
                            <tr class="border-b text-nowrap  border-gray-200 ">
                                <td class="py-3 px-6  text-center" colspan="4">No Record Found</td>
                            </tr>
                        }
                        }
                       

                    } 

                </tbody>
            </table>
        </div>
    </div>

     <!-- New Question Padding Request-->
    <div class="bg-white p-4 rounded-md shadow-lg mt-5  ">
       <!-- Header Section -->
        <div class="table-hader">
            <h1 class="table-responsive-title">List of New Question Padding Request</h1>
        </div>

       <!-- Table Section -->
        <div class="mt-6 overflow-x-auto w-full">
            <table class="min-w-full  bg-white border border-gray-200">
                <thead>
                    <tr class="bg-gray-100 text-nowrap text-gray-600  uppercase text-sm leading-normal">
                        <th class="py-3 px-6 text-left">#</th>
                        <th class="py-3 px-6 text-left">Question</th>
                        <th class="py-3 px-6 text-left">Details</th>
                        @if(isAdmin){
                            <th class="py-3 px-6 text-left">Action</th>
                        }else{
                            <th class="py-3 px-6 text-left">Status</th>
                        }
                    </tr>
                </thead>
                <tbody id="courses" class="text-gray-700 text-sm font-light">
                    @{
                        int questionIdx = 1;
                        if(Model != null && Model.PaddingQuestionRequest != null){
                             foreach(QuestionModel question in Model.PaddingQuestionRequest){
                            <tr class="border-b text-nowrap  border-gray-200 ">
                                <td class="py-3 px-6 text-left">@questionIdx</td>
                                <td class="py-3 px-6 text-left">@question.Question</td>
                                <td class="py-3 px-6 text-left">
                                    <a href="javascript:void(0);" class="text-blue-500 question-view-details" data-question='@Html.Raw(JsonConvert.SerializeObject(question))'>View Details</a>
                                </td>
                                @if(isAdmin){
                                    <td class="action-button">
                                        <a asp-action="UpdateNewInterviewQuestionRequestStatus" asp-route-id='@question.QuestionId' asp-route-status="Reject" class="reject button"><i class="fa-solid fa-times-circle"></i> Reject</a>
                                        @* <button class="accept text-white px-4 py-2 rounded-md shadow" style="background:#22c55e"><i class="fa-solid fa-check-circle"></i> Accept</button> *@
                                        <a asp-action="UpdateNewInterviewQuestionRequestStatus" asp-route-id='@question.QuestionId' asp-route-status="Accept" class="accept button" style="background:#22c55e"><i class="fa-solid fa-check-circle"></i> Accept</a>
                                    </td>
                                }else{
                                    <td class="py-3 px-6 text-left">
                                     <span class="status @question.ApproveStatus.ToLower()">@question.ApproveStatus</span>
                                    </td>
                                }
                                

                                
                         </tr> 
                         questionIdx++;
                        }
                        // not found
                        if(Model.PaddingQuestionRequest.Count == 0){
                            <tr class="border-b text-nowrap  border-gray-200 ">
                                <td class="py-3 px-6  text-center" colspan="5">No Record Found</td>
                            </tr>
                        }
                        }
                       
                    }   

                </tbody>
            </table>
        </div>
    </div>

    }
   
</div>



@section Scripts {
    <!-- Detalis Dailogs -->

    <!-- Question -->
<script>
       document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById("detailsModal");
    const closeModalButton = document.getElementById("closeModalButton");

    document.querySelectorAll(".question-view-details").forEach(button => {
        button.addEventListener("click", function () {
            @* modal.classList.remove("hidden");    *@
            modal.style.display = "flex";
            
            // Parse the Question data
        const question = JSON.parse(this.getAttribute("data-question"));
     // Dynamically load the question details into the modal
        detailsContent.innerHTML = `
            <p><strong>Question:</strong> ${question.Question}</p>
            <p><strong>Answer:</strong> ${question.QuestionAnswer}</p>
            <p><strong>Tech Stack:</strong> ${question.TechStack || 'N/A'}</p>
            <p><strong>Company Name:</strong> ${question.CompanyName || 'N/A'}</p>
            <p><strong>Status:</strong> ${question.approveStatus || 'Pending'}</p>

             <!-- Added by User Section -->
        <div class="added-by-info">
            <p><strong>Added By:</strong></p>
            <p><strong>Name:</strong> ${question.AddedByAdminUser.UserName || "N/A"}</p>
            <p><strong>Email:</strong> ${question.AddedByAdminUser.Email || "N/A"}</p>
            <p><strong>College:</strong> ${question.AddedByAdminUser.CollegeName || "N/A"}</p>
        </div>
        `;
    });
    });

    // Close modal
    closeModalButton.addEventListener("click", function () {
        @* modal.classList.add("hidden"); *@

        modal.style.display = "none";
    });

    // Close modal when clicking outside content
    modal.addEventListener("click", function (event) {
        if (event.target === modal) {
            @* modal.classList.add("hidden"); *@
            modal.style.display = "none";
        }
    });
});

</script>

<!-- Student -->
<script>
       document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById("student-detailsModal");
    const closeModalButton = document.getElementById("student-closeModalButton");

    document.querySelectorAll(".student-view-details").forEach(button => {
        button.addEventListener("click", function () {
            @* modal.classList.remove("hidden");    *@
            modal.style.display = "flex";
            
            // Parse the Student data
        const student = JSON.parse(this.getAttribute("data-question"));
     // Dynamically load the student details into the modal
        studentDetailsContent.innerHTML = `
            <p><strong>Name:</strong> ${student.userName}</p>
            <p><strong>Email:</strong> ${student.email}</p>
            <p><strong>College:</strong> ${student.collegeName || 'N/A'}</p>
            <p><strong>ApproveStatus:</strong> ${student.approveStatus || 'N/A'}</p>
        `;
    });
    });

    // Close modal
    closeModalButton.addEventListener("click", function () {
        @* modal.classList.add("hidden"); *@
        modal.style.display = "none";
    });

    // Close modal when clicking outside content
    modal.addEventListener("click", function (event) {
        if (event.target === modal) {
            @* modal.classList.add("hidden"); *@
            modal.style.display = "none";
        }
    });
});

</script>

<!-- Mcq -->
<script>
       document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById("mcqDetailsModal");
    const closeModalButton = document.getElementById("closeMcqDetailsModal");

    document.querySelectorAll(".mcq-view-details").forEach(button => {
        button.addEventListener("click", function () {
            @* modal.classList.remove("hidden");    *@
            modal.style.display = "flex";
            
            // Parse the MCQ data
        const mcq = JSON.parse(this.getAttribute("data-mcq"));

            // Dynamically populate the modal content
        mcqDetailsContent.innerHTML = `
    <div class="mcq-detail">
        <h2 class="mcq-title">${mcq.QuestionText}</h2>
        <div class="mcq-options">
            <p><strong>Options:</strong></p>
            <ul>
                <li><strong>A:</strong> ${mcq.OptionA}</li>
                <li><strong>B:</strong> ${mcq.OptionB}</li>
                <li><strong>C:</strong> ${mcq.OptionC}</li>
                <li><strong>D:</strong> ${mcq.OptionD}</li>
            </ul>
        </div>
        <p><strong>Correct Answer:</strong> <span class="correct-answer">${mcq.CorrectAnswer}</span></p>
        <p><strong>Answer Description:</strong> ${mcq.AnswerDescription}</p>
        <p><strong>Technology Stack:</strong> ${mcq.TechStack || "N/A"}</p>
        <p><strong>Company:</strong> ${mcq.CompanyName || "N/A"}</p>
        <p><strong>Status:</strong> ${mcq.ApproveStatus}</p>
        <p><strong>Active:</strong> ${mcq.IsActive ? "Yes" : "No"}</p>

         <!-- Added by User Section -->
        <div class="added-by-info">
            <p><strong>Added By:</strong></p>
            <p><strong>Name:</strong> ${mcq.AddedByAdminUser.UserName || "N/A"}</p>
            <p><strong>Email:</strong> ${mcq.AddedByAdminUser.Email || "N/A"}</p>
            <p><strong>College:</strong> ${mcq.AddedByAdminUser.CollegeName || "N/A"}</p>
        </div>
    </div>
`;
        });
    });

    // Close modal
    closeModalButton.addEventListener("click", function () {
        modal.style.display = "none";
    });

    // Close modal when clicking outside content
    modal.addEventListener("click", function (event) {
        if (event.target === modal) {
            modal.style.display = "none";
        }
    });
});

</script>
}
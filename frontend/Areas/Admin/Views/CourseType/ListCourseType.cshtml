@model List<CourseTypeModel>
@using Placement_Preparation.Utils;


<div class="bg-white p-4 rounded-md shadow-lg ">
    <!-- Header Section -->
    <div class="table-hader">
        <h1 class="table-responsive-title">List of Course Type</h1>
        <div class="flex gap-4" style="gap:0.5rem">
            <a asp-action="ExportToExcelCourseType" asp-asp-controller="CourseType" class="export-excel-btn"><i class="fa-solid fa-file-export fa-bounce"></i> Export in Excel</a>
            <a asp-action="AddOrEditCourseType" asp-controller="CourseType" class="primary-button"><i class="fa-solid fa-plus fa-bounce"></i> Add Course Type</a>
        </div>
    </div>

    <div>
        <!-- Search Bar Section -->
        <div class="relative">
            <input id="courseTypeSearch" class="bg-gray-100 w-full pr-11 h-10 pl-3 py-2 bg-transparent placeholder:text-slate-400 text-slate-700 text-sm border border-slate-200 rounded transition duration-300 ease focus:outline-none focus:border-blue-500 hover:border-blue-500 shadow-sm focus:shadow-md"
                   placeholder="Search for Course Type..." />
            <button class="absolute h-8 w-8 right-1 top-1 my-auto px-2 flex items-center bg-white rounded "
                    type="button">
                <svg xmlns="http://www.w3.org/2000/svg" fill="transparent" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor" class="w-8 h-8 text-slate-600">
                    <path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z" />
                </svg>
            </button>
        </div>

        <!-- Table Section -->
        <div class="mt-6 overflow-x-auto w-full">
            <table class="min-w-full  bg-white border border-gray-200">
                <thead>
                    <tr class="bg-gray-100 text-nowrap text-gray-600  uppercase text-sm leading-normal">
                        <th><input type="checkbox" id="selectAll" /></th>
                        <th class="py-3 px-6 text-left">#</th>
                        <th class="py-3 px-6 text-left">CourseType Name</th>
                        <th class="py-3 px-6 text-left">Action</th>
                    </tr>
                </thead>
                <tbody id="courseTypes" class="text-gray-700 text-sm font-light">
                    @{
                        int index = 1;
                        foreach (var courseType in Model)
                        {
                            <tr class="border-b text-nowrap  border-gray-200 " onclick="toggleCheckbox(this)" >
                                <th><input type="checkbox"  class="select-row" value="@courseType.CourseTypeId" onclick="toggleCheckbox(this)" /></th>
                                <td class="py-3 px-6 text-left">@index</td>
                                <td class="py-3 px-6 text-left">@courseType.CourseTypeName</td>
                                <td class="py-3 px-6 text-left flex gap-x-4">
                                    @* <a class="cursor-pointer" asp-action="AddOrEditCourseType" asp-route-courseTypeId="@courseType.CourseTypeId"><img src="~/assets/icons/edit.svg" height="20" width="20" /></a> *@
                                    <a class="cursor-pointer" asp-action="AddOrEditCourseType" asp-route-courseTypeIdEncrypt="@UrlEncryptor.Encrypt(courseType.CourseTypeId!.ToString())"><img src="~/assets/icons/edit.svg" height="20" width="20" /></a>
                                    <a class="cursor-pointer" onclick="confirmDelete('/DeleteCourseType/@courseType.CourseTypeId')"><img src="~/assets/icons/delete.svg" height="20" width="20" /></a>
                                </td>
                            </tr>
                            index++;
                        }
                        
                         // If no Course Type found 
                        if(Model.Count == 0){
                            <tr class="border-b text-nowrap border-gray-200  no-courseType-found">
                                <td class="py-3 px-6 text-center" colspan="5">No  Course Type Found</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
         <button id="handleDelete" class="clear-button m-4" style="margin-top: 20px; display: block;width: fit-content;"><i class="fa-regular fa-trash-can fa-bounce"></i> Delete </button>
    </div>
</div> 

@section Scripts{
  <!-- Input SearchBar  -->
   <script>
       $(document).ready(function () {
           $('#courseTypeSearch').on("keyup", function () {
               var value = $(this).val().toLowerCase().toString().trim();

               // Filter table rows based on search input
               $("#courseTypes tr").filter(function () {
                   $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
               });

               // Check the number of visible rows
               var visibleRows = $("#courseTypes tr:visible").length;

               // Remove existing "No course type Found" row if it exists
               $("#courseTypes .no-course-type-found").remove();

               // If no rows are visible, add the "No Course Type Found" row
               if (visibleRows === 0) {
                   $("#courseTypes").append('<tr class="border-b text-nowrap border-gray-200  no-course-type-found"><td class="py-3 px-6 text-center" colspan="3">No course Type Found</td></tr>');
               }
           });
       });
   </script>

   <!-- Delete All checkbox Box -->
<script>
      function toggleCheckbox(row) {
        const checkbox = row.querySelector('.select-row');
            checkbox.checked = !checkbox.checked; // Toggle the checkbox state
             highlightRow(checkbox); // Call highlightRow explicitly
             updateSelectAllState(); // Update the select all checkbox state
        }
        

    // Highlight the row if the checkbox is checked
    function highlightRow(checkbox) {
        const row = checkbox.closest('tr');
        console.log(checkbox.checked);
        if (checkbox.checked) {
            row.classList.add('row-highlight');
        } else {
            row.classList.remove('row-highlight');
        }
    }

   // select All checkbox
    document.getElementById('selectAll').addEventListener('change', function () {
        const checkboxes = document.querySelectorAll('.select-row');
        checkboxes.forEach(checkbox => {
            checkbox.checked = this.checked;
            highlightRow(checkbox);
        });
    });
    function updateSelectAllState() {
    const checkboxes = document.querySelectorAll('.select-row');
    const selectAllCheckbox = document.getElementById('selectAll');
    const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);
    const noneChecked = Array.from(checkboxes).every(checkbox => !checkbox.checked);

    if (allChecked) {
        selectAllCheckbox.checked = true;
        selectAllCheckbox.indeterminate = false; // Not in an indeterminate state
    } else if (noneChecked) {
        selectAllCheckbox.checked = false;
        selectAllCheckbox.indeterminate = false; // Not in an indeterminate state
    } else {
        selectAllCheckbox.checked = false;
        selectAllCheckbox.indeterminate = true; // Set indeterminate state
    }
}

    // Prevent the row click from triggering when clicking on specific elements like the edit/delete buttons
    document.querySelectorAll('.select-row').forEach(row => {
        row.addEventListener('click', function (e) {
            if (e.target.tagName === 'A' || e.target.tagName === 'IMG') {
                e.stopPropagation();
            }
        });
    });

    // Delete button click
    document.getElementById('handleDelete').addEventListener('click', function () {
        const selectedIds = Array.from(document.querySelectorAll('.select-row:checked')).map(checkbox => checkbox.value);
        if (selectedIds.length === 0) {
            alert('Please select at least one Course to delete');
            return;
        }

         Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, delete it!"
    }).then((result) => {
        // If the user confirms, redirect to the delete URL
        if (result.isConfirmed) {
            window.location.href = '/Admin/CourseType/DeleteMultipleCourseType?courseTypeIds=' + selectedIds.join(',');
        }
    });
    });
</script>
}
@model Dictionary<string, dynamic>

@{
    string courseName =Model != null && Model.ContainsKey("course") ? Model["course"]["courseName"] : "";
    string courseDescription = Model != null && Model.ContainsKey("course") ? Model["course"]["description"] : "";
    string courseId = Model != null && Model.ContainsKey("course") ? Model["course"]["courseId"] : "";
    ViewData["Title"] = courseName;
}

<!-- Page Title -->
<div class="page-title light-background">
    <div class="course">
        <h1>@courseName</h1>
        <h4>@courseDescription</h4>
        <nav class="breadcrumbs">
            <ol>
                <li><a asp-controller="Home" asp-action="Home">Home</a></li>
                <li><a asp-controller="Course" asp-action="ListAllCourse">Courses</a></li>
                <li class="current">Java</li>
            </ol>
        </nav>
    </div>
</div><!-- End Page Title -->


<!-- Topic   Section -->
<section id="topic-section " class=" container courses-section section">
    <!-- Section Title -->
      <div class="container section-title" data-aos="fade-up">
        <h2>All Topics</h2>

     <div class="search-section">
        <!-- Input field for search -->
       <input type="text" id="input-search" style="flex: 1 1 40%;" class="search-input" placeholder="Search Topics...">

        <!-- Dropdown filters -->
        <div class="filter-container">
            @if(ViewBag.difficultyLevelList != null)
            {
            <select asp-items="@ViewBag.difficultyLevelList as List<SelectListItem>" class="filter-dropdown shadow-sm">
                <option value="">All Difficulty Levels</option>
            </select>
            }
        </div>
     </div>     

    <!-- List  Subtopic -->
     @if(ViewData["InternalServerError"] != null){
          <partial name="_Errors" />
        }else{
       <div class="table-container rounded-4 shadow">
            <table class="table-body">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Topic Name</th>
                        <th>Difficulty Level</th>
                    </tr>
                </thead>
                <tbody class="table-body" id="topicListBody">
                    @if(Model != null && Model.ContainsKey("topicList")){
                        var index = 1;
                        foreach (var topic in Model["topicList"])
                    {
                        <tr onclick='window.location.assign("CourseRead?courseId=@courseId&topicId=@topic["topicId"]")'>
                            <td>@index</td>
                            <td>@topic["topicName"]</td>
                            <td>@topic["difficultyLevel"]</td>
                            </tr>
                            index++;
                        }

                        if(Model["topicList"].Count == 0)
                        {
                            <tr class="border-b text-nowrap border-gray-200  no-topic-found">
                                <td class="py-3 px-6 text-center" colspan="3">No Topic Found</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
      }
      </div><!-- End Section Title -->

</section>

@section Scripts{
    <!-- Input Search Bar -->
   <script>
       $(document).ready(function () {
           $('#input-search').on("keyup", function () {
               var value = $(this).val().toLowerCase().toString().trim();
               $("#topicListBody tr").filter(function () {
                   $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
               });

                // Check the number of visible rows
               var visibleRows = $("#topicListBody tr:visible").length;

               // Remove existing "No Topic Found" row if it exists
               $("#topicListBody .no-topic-found").remove();

               // If no rows are visible, add the "No Topic Found" row
               if (visibleRows === 0) {
                   $("#topicListBody").append('<tr class="border-b text-nowrap border-gray-200  no-topic-found"><td class="py-3 px-6 text-center" colspan="3">No Topic Found</td></tr>');
               }
           });
       });
   </script>

   <!-- Dropdown Search -->
   <script>
         $(document).ready(function () {
              $('.filter-dropdown').on("change", function () {
                var value = $(this).find("option:selected").text().toLowerCase().toString().trim();

                // pass empty value when select all difficulty levels
                value = value == "all difficulty levels" ? "" : value;
                console.log(value);
                $("#topicListBody tr").filter(function () {
                     $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
    
                // Check the number of visible rows
                var visibleRows = $("#topicListBody tr:visible").length;
    
                // Remove existing "No Topic Found" row if it exists
                $("#topicListBody .no-topic-found").remove();
    
                // If no rows are visible, add the "No Topic Found" row
                if (visibleRows === 0) {
                     $("#topicListBody").append('<tr class="border-b text-nowrap border-gray-200  no-topic-found"><td class="py-3 px-6 text-center" colspan="3">No Topic Found</td></tr>');
                }
              });
         });
   </script>
}   

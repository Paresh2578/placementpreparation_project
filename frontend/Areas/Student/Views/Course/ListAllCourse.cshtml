@model List<CourseModel>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor  


@{
    ViewData["Title"] = "All Courses";

    List<CourseModel> courses = Model;
     var serializedCourses = System.Text.Json.JsonSerializer.Serialize(courses);

    var query = HttpContextAccessor.HttpContext!.Request.Query;
    var courseType = query["courseType"].ToString();

    var pageTitle = string.IsNullOrEmpty(courseType.Trim()) ? "All" : courseType.Substring(0,1).ToString().ToUpper() + courseType.Substring(1).ToString().ToLower();
}

<!-- Page Title -->
<div class="page-title light-background">
    <div class="container">
        <h1>@pageTitle Courses</h1>
        <nav class="breadcrumbs">
            <ol>
                <li><a asp-controller="Home" asp-action="Home">Home</a></li>
                <li class="current">Courses</li>
            </ol>
        </nav>
    </div>
</div><!-- End Page Title -->

<!-- Courses Section -->
<section id="courses-section" class="container courses-section section" style="background-color: #fcfcfc;">
    <div class="search-bar-container">
        <!-- Input field for search -->
        <input type="text" oninput="onSearch(this)" id="course-search-input" class="search-input" placeholder="Search courses...">

        <!-- Dropdown filters -->
        <div class="filter-container">
            <select asp-items="@ViewBag.BranchList as List<SelectListItem>" id="branch" class="filter-dropdown shadow-sm">
                <option value="">All Branchs</option>
            </select>
            <!-- hide when bg-gray-100 default show data in particular courseType  -->
            @if(string.IsNullOrEmpty(courseType)){
                <select asp-items="@ViewBag.CourseTypeList as List<SelectListItem>" id="courseType" class="filter-dropdown shadow-sm">
                    <option value="">All Course Types</option>
                </select>
            }
        </div>

        <!-- Search Button -->
        <button  onclick="handleSearch()" class="btn btn-primary shadow"><i class="fa-solid fa-magnifying-glass fa-bounce"></i> Search</button>
    </div>

     @if(ViewData["InternalServerError"] != null){
                        <partial name="_Errors" />
    }else{
          <!-- List of Courses -->
    <div class="course-list p-2">
        <div class="row gy-4" id="course-list">
            @foreach (var course in courses)
            {
                <a asp-action="CourseDetail" asp-controller="Course" asp-route-courseId="@course.CourseId" class=" col-lg-3 col-md-6 d-flex align-items-stretch course-item" data-aos="fade-up" data-aos-delay="100" data-name="@course.CourseName">
                    <div class="course-card">
                        <div class="card-img" style="position: relative;">
                            <img src="@course.Img" class="img-fluid" alt="@course.CourseName" style="width: 100%; height: 100%; object-fit: cover;">
                            <div style="position: absolute; top: 5px; left: 10px;">
                                    <span class="badge bg-danger">@course.CourseType.CourseTypeName</span>
                            </div>
                        </div>
                        <div class="card-content">
                            <h4 class="name">@course.CourseName</h4>
                        </div>
                    </div>
                </a>
            }

            @if (courses.Count == 0)
            {
                <h3 class="text-center">No Course Found</h3>
            }
        </div>
    </div>
    }
</section>

<!-- jQuery Script -->
@* <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> *@
@section Scripts{
    <!-- input search -->
  <script>
        // Inject serialized courses from Razor into JavaScript
        const courses = @Html.Raw(@serializedCourses);

        function onSearch(e) {
            const searchTerm = e.value.trim().toLowerCase();

            // Filter courses based on search term
            const filteredCourses = courses.filter(course =>
                course.CourseName.toLowerCase().includes(searchTerm)
            );

            // Update UI
            const courseList = document.getElementById("course-list");
            courseList.innerHTML = ""; // Clear current courses

            filteredCourses.forEach(course => {
                const courseCard = `
                    <a href="CourseDetail?courseId=${course.CourseId}" class="col-lg-3 col-md-6 d-flex align-items-stretch course-item" data-aos="fade-up" data-aos-delay="100" data-name="${course.CourseName}">
                        <div class="course-card">
                            <div class="card-img" style="position: relative;">
                                <img src="${course.Img}" class="img-fluid" alt="${course.CourseName}" style="width: 100%; height: 100%; object-fit: cover;">
                                <div style="position: absolute; top: 5px; left: 10px;">
                                    <span class="badge bg-danger">${course.CourseType.CourseTypeName}</span>
                            </div>
                            </div>
                            <div class="card-content">
                                
                                <h4 class="name">${course.CourseName}</h4>
                            </div>
                        </div>
                    </a>
                `;
                courseList.insertAdjacentHTML("beforeend", courseCard);
            });

            // Add no found message
            if(filteredCourses.length ==0){
                courseList.innerHTML = `<h3 class="text-center">No Course Found</h3>`;
            }
        }
    </script>

 <!-- DropDown Search -->
 <script>
    function handleSearch() {
        var branchId = $("#branch").val();
        var courseTypeId = $("#courseType").val();

        console.log(branchId ,courseTypeId);
        //set empty string if value is null
        branchId = branchId === undefined ? "" : branchId;
        courseTypeId = courseTypeId === undefined ? "" : courseTypeId;

         // Filter courses based on brachId , courseId
            const filteredCourses = courses.filter(course => {
                        if (
                            @* (branchId ==undefined || branchId === "" || course.BranchId === branchId) && *@
                            ( branchId === "" || course.BranchId === branchId) &&
                            ( courseTypeId === "" || course.CourseTypeId === courseTypeId) // Corrected comparison
                            @* (courseTypeId =undefined|| courseTypeId === "" || course.CourseTypeId === courseTypeId) // Corrected comparison *@
                        ) {
                            return true;
                        } else {
                            return false;
                        }
                    });

        // Update UI
           const courseList = document.getElementById("course-list");
            courseList.innerHTML = ""; // Clear current courses

            filteredCourses.forEach(course => {
                const courseCard = `
                    <a href="CourseDetail?courseId=${course.CourseId}" class="col-lg-3 col-md-6 d-flex align-items-stretch course-item" data-aos="fade-up" data-aos-delay="100" data-name="${course.CourseName}">
                        <div class="course-card">
                            <div class="card-img" style="position: relative;">
                                <img src="${course.Img}" class="img-fluid" alt="${course.CourseName}" style="width: 100%; height: 100%; object-fit: cover;">
                                <div style="position: absolute; top: 5px; left: 10px;">
                                    <span class="badge bg-danger">${course.CourseType.CourseTypeName}</span>
                            </div>
                            </div>
                            <div class="card-content">
                                
                                <h4 class="name">${course.CourseName}</h4>
                            </div>
                        </div>
                    </a>
                `;
                courseList.insertAdjacentHTML("beforeend", courseCard);
            });

            // Add no found message
            if(filteredCourses.length ==0){
                courseList.innerHTML = `<h3 class="text-center">No Course Found</h3>`;
            } 
    }
 </script>
}

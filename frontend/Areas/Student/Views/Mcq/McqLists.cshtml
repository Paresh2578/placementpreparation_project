@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using Markdig
@model IPagedList<McqModel>;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor  

@{
    ViewData["Title"] = "McqLists";
    var query = HttpContextAccessor.HttpContext!.Request.Query;

    
  var pipeline = new MarkdownPipelineBuilder()
            .UseAdvancedExtensions() // Enables advanced Markdown features
            .Build();
}



<!-- Page Title -->
<div class="page-title light-background">
    <div class="course">
        <h1>@(query["courseName"])  Mcqs</h1>
        <nav class="breadcrumbs">
            <ol>
                <li><a asp-controller="Home" asp-action="Home">Home</a></li>
                @if(query["courseName"].ToString() != "Interview Mcqs"){
                    <li><a asp-controller="Mcq" asp-action="ListAllCourses">Courses</a></li>
                }
                   <li class="current">Mcqs</li>
                
                
            </ol>
        </nav>
    </div>
</div><!-- End Page Title -->


<!-- Topic   Section -->
<section id="courses-section " class=" container courses-section section">
    <!-- Section Title -->
      <div class="container section-title p-0" data-aos="fade-up">
        <h2>All Mcqs</h2>
      </div><!-- End Section Title -->  

    <!-- mcq list -->
    @{
        int index =  (Model.PageNumber - 1) * Model.PageSize + 1;
    foreach(McqModel mcq in Model){
      <!-- convert markdown to html -->
           var optionA = Html.Raw(Markdown.ToHtml("A . "+mcq.OptionA , pipeline));
           var optionB = Html.Raw(Markdown.ToHtml("B . "+mcq.OptionB , pipeline));
           var optionC = Html.Raw(Markdown.ToHtml("C . "+mcq.OptionC , pipeline));
           var optionD = Html.Raw(Markdown.ToHtml("D . "+mcq.OptionD , pipeline));
           var answerDescription = Html.Raw(Markdown.ToHtml(mcq.AnswerDescription , pipeline));

         <div data-aos="fade-up" class="mcq shadow p-3 mb-3 ms-2  me-2 bg-white rounded" id="mcq@(mcq.McqId)" >
                <h4>@(Html.Raw(Markdown.ToHtml("Q" + (index)+ ". "+ mcq.QuestionText , pipeline)))</h4>
                <div class="tags mb-2" style="">
                       @if(mcq.CompanyName != null){ <span class="tag company">@mcq.CompanyName</span>}
                       @if(mcq.TechStack != null){ <span class="tag tech-stack">@mcq.TechStack</span>}
                    </div>
                <div id="mcq-option-section@(mcq.McqId)" class="mcq-option-section">
                    <div class="mcq-option " style="padding-bottom: 1px;" data-value="@(mcq.CorrectAnswer.ToLower().Trim() =="a" )" onclick='clickMcqOption(this,"@(mcq.McqId.ToString())")'>@(optionA)</div>
                    <div class="mcq-option" style="padding-bottom: 1px;" data-value="@(mcq.CorrectAnswer.ToLower().Trim() =="b")" onclick='clickMcqOption(this,"@(mcq.McqId.ToString())")'> @(optionB)</div>
                    <div class="mcq-option" style="padding-bottom: 1px;" data-value="@(mcq.CorrectAnswer.ToLower().Trim() =="c")" onclick='clickMcqOption(this,"@(mcq.McqId.ToString())")'> @(optionC)</div>
                    <div class="mcq-option" style="padding-bottom: 1px;" data-value="@(mcq.CorrectAnswer.ToLower().Trim() =="d")" onclick='clickMcqOption(this,"@(mcq.McqId.ToString())")'>@(optionD)</div>
                </div>
                <!-- answer -->
                <div class="mcq-answer">
                  <button class="ans-toggel-btn shadow" onclick='togelShowAnswer(this,"@(mcq.McqId.ToString())")'>Show Answer</button>
                  <div class="mcq-ans-discription d-none">
                    <p>Answer : @(mcq.CorrectAnswer.ToLower() == "a" ? mcq.OptionA : mcq.CorrectAnswer.ToLower() == "b" ? mcq.OptionB : mcq.CorrectAnswer.ToLower() == "c" ? mcq.OptionC : mcq.OptionD )</p>
                    <span class="fw-bold">Explanation</span>
                    <div class="p-2 " style="border-style: dotted; border-color: gray;">
                      @(answerDescription)
                    </div>
                  </div>
                </div>
              </div>
              index++;
    }     
    }

    <!-- Pagination -->
    <div class="pagination-container mt-4 text-center">
        @Html.PagedListPager(
            Model,
            page => Url.Action("McqLists", new { pageNumber = page }),
            new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                MaximumPageNumbersToDisplay = 5,
                DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                UlElementClasses = new List<string> { "pagination" },
                LiElementClasses = new List<string> { "page-item" },
                PageClasses = new List<string> { "page-link" }
            }
        )
    </div>
    <!-- End Pagination -->

</section>

@section Scripts{
      <!-- mcq answer -->
  <script>
   

    function togelShowAnswer(e,mcqId){
      const answer = e.nextElementSibling;
      const mcqOptionSection = document.getElementById('mcq-option-section'+mcqId);

      // <!-- set color in options --> 
      for(var children of mcqOptionSection.children){
        if(children.dataset.value == "True"){
          children.classList.add('true');
          }else{
          children.classList.remove('false');
          children.classList.remove('true');
          }
      }

      // Hide and show Answer
      answer.classList.toggle('show');
      if(answer.classList.contains('show')){
        e.innerHTML = "Hide Answer";
        answer.classList.remove('d-none');
      }else{
        e.innerHTML = "Show Answer";
        answer.classList.add('d-none');
      // <!-- hide right answer when click hide answer -->
        hideRightOption(mcqOptionSection);
      }
      
    }
    function hideRightOption(mcqOptionSection){
      
      for(var children of mcqOptionSection.children){
          children.classList.remove('true');
          children.classList.remove('false');
       
    }
    }


    @* <!-- click mcq options --> *@
    function clickMcqOption(e,mcqId){
       const mcqOptionSection = document.getElementById('mcq-option-section'+mcqId);
       console.log(mcqOptionSection);
      for(var children of mcqOptionSection.children){
        children.classList.remove('true');
        children.classList.remove('false');
      }

      if(e.dataset.value == "True"){
        e.classList.add('true');
      }else{
        e.classList.add('false');
      }


    }
  </script>
}